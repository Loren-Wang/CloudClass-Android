// Generated by view binder compiler. Do not edit!
package io.agora.online.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import io.agora.online.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FcrOnlineUserSearchLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView agoraSearchCancelBtn;

  @NonNull
  public final EditText agoraSearchCriteriaText;

  @NonNull
  public final TextView agoraSearchGoBtn;

  @NonNull
  public final TextView fcrSearchEmpty;

  @NonNull
  public final LinearLayout userSearchLayout;

  @NonNull
  public final RecyclerView userSearchRecyclerView;

  private FcrOnlineUserSearchLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView agoraSearchCancelBtn, @NonNull EditText agoraSearchCriteriaText,
      @NonNull TextView agoraSearchGoBtn, @NonNull TextView fcrSearchEmpty,
      @NonNull LinearLayout userSearchLayout, @NonNull RecyclerView userSearchRecyclerView) {
    this.rootView = rootView;
    this.agoraSearchCancelBtn = agoraSearchCancelBtn;
    this.agoraSearchCriteriaText = agoraSearchCriteriaText;
    this.agoraSearchGoBtn = agoraSearchGoBtn;
    this.fcrSearchEmpty = fcrSearchEmpty;
    this.userSearchLayout = userSearchLayout;
    this.userSearchRecyclerView = userSearchRecyclerView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FcrOnlineUserSearchLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FcrOnlineUserSearchLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fcr_online_user_search_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FcrOnlineUserSearchLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.agora_search_cancel_btn;
      ImageView agoraSearchCancelBtn = ViewBindings.findChildViewById(rootView, id);
      if (agoraSearchCancelBtn == null) {
        break missingId;
      }

      id = R.id.agora_search_criteria_text;
      EditText agoraSearchCriteriaText = ViewBindings.findChildViewById(rootView, id);
      if (agoraSearchCriteriaText == null) {
        break missingId;
      }

      id = R.id.agora_search_go_btn;
      TextView agoraSearchGoBtn = ViewBindings.findChildViewById(rootView, id);
      if (agoraSearchGoBtn == null) {
        break missingId;
      }

      id = R.id.fcr_search_empty;
      TextView fcrSearchEmpty = ViewBindings.findChildViewById(rootView, id);
      if (fcrSearchEmpty == null) {
        break missingId;
      }

      id = R.id.user_search_layout;
      LinearLayout userSearchLayout = ViewBindings.findChildViewById(rootView, id);
      if (userSearchLayout == null) {
        break missingId;
      }

      id = R.id.user_search_recycler_view;
      RecyclerView userSearchRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (userSearchRecyclerView == null) {
        break missingId;
      }

      return new FcrOnlineUserSearchLayoutBinding((LinearLayout) rootView, agoraSearchCancelBtn,
          agoraSearchCriteriaText, agoraSearchGoBtn, fcrSearchEmpty, userSearchLayout,
          userSearchRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
